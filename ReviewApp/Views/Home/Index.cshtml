@using ReviewApp.Helpers
@model List<ReviewApp.Models.Review>
@{
    ViewData["Title"] = "User Reviews";
}

<style>
    .form-container 
    {
        max-width: 400px;
        margin-bottom: 20px;
    }

    .form-group 
    {
        display: flex;
        flex-direction: row;
        align-items: flex-start;
        margin-bottom: 10px;
    }

        .form-group label 
        {
            width: 100px;
            margin-right: 10px;
            font-weight: bold;
        }

        .form-group input,
        .form-group textarea 
        {
            flex: 1;
            padding: 6px;
            box-sizing: border-box;
        }

    .form-submit 
    {
        justify-content: flex-start;
    }

    button 
    {
        padding: 8px 16px;
    }
</style>

<h2>User Reviews</h2>

    <form method="post" action="/home/add" class="form-container">
    <div class="form-group">
        @Html.Label("Author", "Author:")
        @Html.TextBox("Author", null, new { required = "required" })
    </div>
    <div class="form-group">
        @Html.Label("Message", "Message:")
        @Html.TextArea("Message", null, new { rows = "4", required = "required" })
    </div>
    <div class="form-group">
        @Html.Label("Rating", "Rating (1–5):")
        @Html.TextBox("Rating", null, new { type = "number", min = "1", max = "5", required = "required" })
    </div>
    <div class="form-group form-submit">
        <button type="submit">Submit Review</button>
    </div>
</form>

<hr />

<h3>Latest Reviews</h3>

@if (Model.Count == 0)
{
    <p>No reviews yet.</p>
}
else
{
    foreach (var review in Model)
    {
        @Html.RenderReview(review.Author, review.Message, review.Rating, review.CreatedAt)
    }
}


